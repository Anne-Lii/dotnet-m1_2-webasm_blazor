@page "/json"
@inject HttpClient Http

<h2>JSON Pokémon Data</h2>

@if (pokemon == null)
{
    <p>Laddar Pokémon...</p>
}
else
{
    <div>
        <h3 class="pokemonName">@pokemon.Name?.ToUpper()</h3>
        <!-- Dynamisk bild baserat på Pokemon ID -->
       <img src="@($"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/{pokemonId}.png")" alt="Pokemon Image" style="max-width: 200px;" />
    </div>
}

<button @onclick="GetRandomPokemon">Hämta en Slumpmässig Pokémon</button>

@code {
    private Pokemon? pokemon;
    private int pokemonId;

    //Metod för att hämta en slumpmässig Pokémon från API
    private async Task GetRandomPokemon()
    {
        //Hämtar ett slumpmässigt Pokémon-ID mellan 1 och 898 (antal Pokemon i APIet)
        pokemonId = new Random().Next(1, 899); //Sparar det slumpmässiga ID:t
        var url = $"https://pokeapi.co/api/v2/pokemon/{pokemonId}";

        //Hämtar data från API och omvandla det till en Pokemon-objekt
        pokemon = await Http.GetFromJsonAsync<Pokemon>(url);
    }

    //Klass för att representera en Pokemon från API:t
    public class Pokemon
    {
        public string? Name { get; set; }
        public Sprites? Sprites { get; set; }
    }

    public class Sprites
    {
        public string? FrontDefault { get; set; }
    }
}
